# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-emulation/libguestfs:erlang - Build Erlang bindings
app-emulation/libguestfs:fuse - Enable image mount support via fuse
app-emulation/libguestfs:inspect-icons - Use media-gfx/icoutilsfor acces icon file in image and inspect it
app-emulation/libguestfs:systemtap - Use dev-util/systemtap to inspect VM via "probes" way
app-emulation/libvirt:apparmor - Enable AppArmor support
app-emulation/libvirt:firewalld - DBus interface to iptables/ebtables allowing for better runtime management of your firewall.
app-emulation/libvirt:fuse - Allow LXC to use sys-fs/fuse for mount points
app-emulation/libvirt:glusterfs - Enable GlusterFS support via sys-cluster/glusterfs
app-emulation/libvirt:iscsi - Allow using an iSCSI remote storage server as pool for disk image storage
app-emulation/libvirt:libssh - Use net-libs/libssh to communicate with remote libvirtd hosts, for example: qemu+libssh://server/system
app-emulation/libvirt:libvirtd - Builds the libvirtd daemon as well as the client utilities instead of just the client utilities
app-emulation/libvirt:lvm - Allow using the Logical Volume Manager (sys-fs/lvm2) as pool for disk image storage
app-emulation/libvirt:lxc - Support management of Linux Containers virtualisation (app-emulation/lxc)
app-emulation/libvirt:macvtap - Support for MAC-based TAP (macvlan/macvtap). For networking instead of the normal TUN/TAP. It has its advantages and disadvantages. macvtap support requires very new kernels and is currently evolving. Support for this is experimental at best.
app-emulation/libvirt:nfs - Allow using Network File System mounts as pool for disk image storage
app-emulation/libvirt:numa - Use NUMA for memory segmenting via sys-process/numactl and sys-process/numad
app-emulation/libvirt:openvz - Support management of OpenVZ virtualisation (openvz-sources)
app-emulation/libvirt:parted - Allow using real disk partitions as pool for disk image storage, using sys-block/parted to create, resize and delete them.
app-emulation/libvirt:pcap - Support auto learning IP addreses for routing
app-emulation/libvirt:phyp - Support IBM HMC / IVM hypervisor via PHYP protocol
app-emulation/libvirt:qemu - Support management of QEMU virtualisation (app-emulation/qemu)
app-emulation/libvirt:rbd - Enable rados block device support via sys-cluster/ceph
app-emulation/libvirt:uml - Support management of User Mode Linux virtualisation
app-emulation/libvirt:vepa - Virtual Ethernet Port Aggregator (VEPA) / 802.1Qbg support. Relies on macvtap support.
app-emulation/libvirt:virt-network - Enable virtual networking (NAT) support for guests. Includes all the dependencies for NATed network mode. Effectively any network setup that relies on libvirt to setup and configure network interfaces on your host. This can include bridged and routed networks ONLY if you are allowing libvirt to create and manage the underlying devices for you. In some cases this requires enabling the 'netcf' USE flag (currently unavailable).
app-emulation/libvirt:virtualbox - Support management of VirtualBox virtualisation (one of app-emulation/virtualbox or app-emulation/virtualbox-bin)
app-emulation/libvirt:wireshark-plugins - Build the net-analyzer/wireshark plugin for the Libvirt RPC protocol
app-emulation/libvirt:xen - Support management of Xen virtualisation (app-emulation/xen)
app-emulation/libvirt:zfs - Enable ZFS backend storage sys-fs/zfs
app-emulation/opennebula:extras - Enables additional packages found on arch aur opennebula version.
app-emulation/ovirt-engine:javadoc - Install javadocs
app-emulation/ovirt-engine:quick - Build quick unusable.
app-emulation/ovirt-engine:system-jars - Use system jars as much as possible.
app-emulation/ovirt-node:javadoc - Install javadocs
app-emulation/ovirt-node:quick - Build quick unusable.
app-emulation/ovirt-node:system-jars - Use system jars as much as possible.
app-emulation/supermin:test - Enable tests with network connection. If you don't have a network connection let it disabled.
dev-util/idea-ultimate:custom-jdk - Install and use IntelliJ's custom JRE.
sys-fs/vmfs-tools:fuse - Enable image mount support via fuse
www-client/google-chrome:plugins - Add system plugins path to launcher
